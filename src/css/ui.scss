@mixin clearfix {
  &:before, &:after {
    content:"";
    display:table;
  }
  &:after {
    clear:both;
  }
}

@mixin tab-focus {
  // default
  outline: thin dotted;
  // webkit
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: -2px;
}

@mixin size($width, $height) {
  width: $width;
  height: $height;
}

@mixin square($size) {
  @include size($size, $size);
}


// CSS3 属性的多浏览器兼容
// -----------
// CSS3 中的一些属性在各浏览器由私有属性声明，为了简化编码，把它们都封装成了 mixin
@mixin prefixer($name, $params...) {
  -webkit-#{$name}: $params;
  -moz-#{$name}: $params;
  -ms-#{$name}: $params;
  -o-#{$name}: $params;
  #{$name}: $params;
}

@mixin box-sizing($boxmodel) {
  @include prefixer(box-sizing, $boxmodel);
}

@mixin border-box {
  @include box-sizing(border-box);
}

@mixin transition($params...) {
  @include prefixer(transition, $params);
}

@mixin transform($params) {
  @include prefixer(transform, $params);
}

@mixin animation($params) {
  @include prefixer(animation, $params);
}

@mixin transform-style($params) {
  @include prefixer(transform-style, $params);
}

@mixin perspective($params) {
  @include prefixer(perspective, $params);
}

@mixin perspective-origin($params) {
  @include prefixer(perspective-origin, $params);
}

@mixin transform-origin($params) {
  @include prefixer(transform-origin, $params);
}

@mixin box-shadow($params...) {
  @include prefixer(box-shadow, $params);
}

@mixin text-shadow($params...) {
  @include prefixer(text-shadow, $params);
}

@mixin bg-linear-gradient($c1, $c2) {
  background: -webkit-linear-gradient(top, $c1, $c2);
  background: -moz-linear-gradient(top, $c1, $c2);
  background: -ms-linear-gradient(top, $c1, $c2);
  background: -o-linear-gradient(top, $c1, $c2);
  background: linear-gradient(top, $c1, $c2);
}

@mixin linear-gradient($dir, $c1, $c2) {
  background: -webkit-linear-gradient($dir, $c1, $c2);
  background: -moz-linear-gradient($dir, $c1, $c2);
  background: -ms-linear-gradient($dir, $c1, $c2);
  background: -o-linear-gradient($dir, $c1, $c2);
  background: linear-gradient($dir, $c1, $c2);
}

@mixin unselectable {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

@mixin keyframes($name) {
  @-webkit-keyframes #{$name} { @content; }
  @-moz-keyframes #{$name} { @content; }
  @-ms-keyframes #{$name} { @content; }
  @keyframes #{$name} { @content; } 
}

// _grid.scss
// ----------

// 根据 jeet.gs 的思想，重新设计并精简
// -----------
// 一些实用的 mixins
// 可以方便地构建非十二列的自由网格

// 指定设备以及更大的设备
@mixin -above($media) {
  @if $media == pad {
    @media (min-width: $screen-pad-min) { @content }
  }

  @else if $media == desk {
    @media (min-width: $screen-desk-min) { @content }
  }

  @else if $media == wide {
    @media (min-width: $screen-wide-min) { @content }
  }
}

// 指定设备以及更小的设备
@mixin -below($media) {
  @if $media == phone {
    @media (max-width: $screen-phone-max) { @content }
  }

  @else if $media == pad {
    @media (max-width: $screen-pad-max) { @content }
  }

  @else if $media == desk {
    @media (max-width: $screen-desk-max) { @content }
  }
}

// 所有网格网格的基本共通样式
@mixin -col-base($gap) {
  position: relative;
  min-height: 1px;
  padding-left: $gap / 2;
  padding-right: $gap / 2;
  // float: left;
  @include border-box;
}

// 自由网格
// $ratio 网格宽度（比例）
// $offset 向右偏移量，影响其他元素
// $shift 相对偏移量，不影响其他元素，取正值或负值
// $cycle 此网格循环几次后自动换行
// $uncycle 和 -below / -above 联用，用于消除上层 sass 定义中的 $cycle
// $gap 网格间距（像素值）
@mixin col($ratio: 1, $offset: 0, $shift: 0, $cycle: 0, $uncycle: 0, $gap: $grid-gap) {
  @include -col-base($gap);
  width: percentage($ratio);

  @if $ratio < 1 {
    float: left;
  }

  @if $offset > 0 {
    margin-left: percentage($offset);
  }

  @if $offset < 0 {
    margin-right: percentage(-$offset);
  }

  @if $shift != 0 {
    @if $shift > 0 {
      left: percentage($shift);
    } @else {
      right: percentage($shift);
    }
  }

  @if $uncycle != 0 {
    &:nth-child(#{$uncycle}n) {
      float: left;
      margin-right: 0;
    }
    &:nth-child(#{$uncycle}n + 1) {
      clear: none;
    }
  }

  @if $cycle != 0 {
    &:nth-child(#{$cycle}n) {
      float: right;
      margin-right: percentage(1 - $ratio * $cycle)
    }
    &:nth-child(#{$cycle}n + 1) {
      clear: both;
    }
  }
}

// 无间距的自由网格
// $ratio 网格宽度（比例）
@mixin span($ratio: 1, $offset: 0) {
  @include col($ratio, $offset, $gap: 0);
}

// 开发者临时标记
@mixin dev() {
  background: rgba($on-dev-color, 0.05);
  * { background: rgba($on-dev-color, 0.05); }
}

// bootstrap grid system
// -------------

// 外层容器
@mixin container-fixed {
  margin-left:    auto;
  margin-right:   auto;
  padding-left:   $grid-gap / 2;
  padding-right:  $grid-gap / 2;
  @include clearfix;
  @include border-box;
}

// 网格行
// 主要用途是消除容器/上层网格的 padding
// 便于嵌套
@mixin make-row($gap: $grid-gap) {
  margin-left:  $gap / -2;
  margin-right: $gap / -2;
  @include clearfix;
  @include border-box;
}

@mixin make-grid-columns {
  $list: null;
  @for $i from 1 through $grid-columns {
    $s: ".col-phone-#{$i}, .col-pad-#{$i}, .col-desk-#{$i}, .col-wide-#{$i}";
    $list: append($list, #{$s}, comma);
  }
  #{$list} {
    @include -col-base($grid-gap);
  }
}

@mixin float-grid-columns($class) {
  $list: null;
  @for $i from 1 through $grid-columns {
    $s: ".col-#{$class}-#{$i}";
    $list: append($list, #{$s}, comma);
  }
  #{$list} {
    float: left;
  }
}

@mixin make-grid($class) {
  // float: left 属性必须在 media query 符合条件时才生效，
  // 否则会有宽度 100% 不能正确渲染的 bug
  @include float-grid-columns($class);
  @include loop-grid-columns($grid-columns, $class, width, width);
  @include loop-grid-columns($grid-columns, $class, pull, left);
  @include loop-grid-columns($grid-columns, $class, push, right);
  @include loop-grid-columns($grid-columns, $class, offset, margin-left);
}

@mixin loop-grid-columns($columns, $class, $type, $name) {
  @for $index from 1 through $columns {
    
    @if $type == width {
      .col-#{$class}-#{$index} {
        #{$name}: percentage($index / $columns);
      }
    }

    @else {
      .col-#{$class}-#{$type}-#{$index} {
        #{$name}: percentage($index / $columns);
      }
    }
  }
}


// 高清显示 retina 屏幕
// --------

@mixin retina-screen {
  @media
  only screen and (-webkit-min-device-pixel-ratio: 2),
  only screen and (   min--moz-device-pixel-ratio: 2),
  only screen and (     -o-min-device-pixel-ratio: 2/1),
  only screen and (        min-device-pixel-ratio: 2),
  only screen and (                min-resolution: 192dpi),
  only screen and (                min-resolution: 2dppx) {
    @content
  }
}

@mixin retina-bg-img($url, $url2x, $w, $h) {
  background:url($url) no-repeat;
  @include retina-screen {
    background:url($url2x) no-repeat;
    background-size: $w $h;
  }
}


// form
@mixin form-control-focus($color: $input-border-focus) {
  $color-rgba: rgba(red($color), green($color), blue($color), .6);
  &:focus {
    border-color: $color;
    outline: 0;
    @include box-shadow(inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px $color-rgba);
  }
}

// Placeholder text
@mixin placeholder($color: $input-color-placeholder) {
  &::-moz-placeholder           { color: $color;   // Firefox
                                  opacity: 1; } // See https://github.com/twbs/bootstrap/pull/11526
  &:-ms-input-placeholder       { color: $color; } // Internet Explorer 10+
  &::-webkit-input-placeholder  { color: $color; } // Safari and Chrome
}

// Form control sizing
//
// Relative text size, padding, and border-radii changes for form controls. For
// horizontal sizing, wrap controls in the predefined grid classes. `<select>`
// element gets special love because it's special, and that's a fact!

// [converter] $parent hack
@mixin input-size($parent, $input-height, $padding-vertical, $padding-horizontal, $font-size, $line-height, $border-radius) {
  #{$parent} {
    height: $input-height;
    padding: $padding-vertical $padding-horizontal;
    font-size: $font-size;
    line-height: $line-height;
    border-radius: $border-radius;
  }

  select#{$parent} {
    height: $input-height;
    line-height: $input-height;
  }

  textarea#{$parent},
  select[multiple]#{$parent} {
    height: auto;
  }
}

// Form validation states
//
// Used in forms.less to generate the form validation CSS for warnings, errors,
// and successes.

@mixin form-control-validation($text-color: #555, $border-color: #ccc, $background-color: #f5f5f5) {
  // Color the label and help text
  .help-block,
  .control-label,
  .radio,
  .checkbox,
  .radio-inline,
  .checkbox-inline  {
    color: $text-color;
  }
  // Set the border and box shadow on specific inputs to match
  .form-control {
    border-color: $border-color;
    @include box-shadow(inset 0 1px 1px rgba(0,0,0,.075)); // Redeclare so transitions work
    &:focus {
      border-color: darken($border-color, 10%);
      $shadow: inset 0 1px 1px rgba(0,0,0,.075), 0 0 6px lighten($border-color, 20%);
      @include box-shadow($shadow);
    }
  }
  // Set validation states also for addons
  .input-group-addon {
    color: $text-color;
    border-color: $border-color;
    background-color: $background-color;
  }
  // Optional feedback icon
  .form-control-feedback {
    color: $text-color;
  }
}

$grid-gap: 30px;

// ----------------------

body {
  background-color: #161616;
  color: white;
  font-family: "Segoe UI", "Helvetica Neue", "Helvetica", "Arial", "sans-serif", "微软雅黑";

  a {
    color: lighten(#4183c4, 20%);
    &:hover {
      color: darken(lighten(#4183c4, 20%), 15%);
    }
  }

  .col{
    padding:0 10px;
  }
}

@include keyframes(click_to_continue) {
  0%   { color: #666; }
  50%  { color: #aaa; }
  100% { color: #666; }
}

@include keyframes(click_to_continue_i) {
  0%   { border-left-color: #666; transform:translate(-3px, 0); }
  50%  { border-left-color: #aaa; transform:translate(0, 0); }
  100% { border-left-color: #666; transform:translate(-3px, 0); }
}

$c: lighten(#4cc85e, 20%);
// $c: lighten(#f4c042, 20%);
// $c: lighten(#A5CA39, 20%);
@include keyframes(qpop) {
  0% {
    @include box-shadow(0 0 1px 1px $c, 0 0 3px 1px $c inset);
  }
  50% {
    @include box-shadow(0 0 5px 5px $c, 0 0 5px 5px $c inset);
  }
  100% {
    @include box-shadow(0 0 1px 1px $c, 0 0 1px 1px $c inset);
  }
}

.panel.chatbox {
  @include unselectable;

  .chatpop {
    @include clearfix;
    position: relative;
    padding: $grid-gap / 2 0;
    padding-bottom: 0;

    $w: 64px;

    img.avatar {
      width:$w;height:$w;
      border-radius:4px;
      position:relative;
      float:left;
    }

    .area {
      margin-left: $w + $grid-gap / 2 + 10px;
      @include clearfix;

      .pop {
        float: left;
        background-color: rgba(white, 0.1);
        border-radius: 4px;
        font-size: 16px;
        padding: 15px 20px;
        line-height:28px;min-height:28px;
        cursor:default;
        position: relative;
        margin-bottom: 10px;
        box-sizing:border-box;
        max-width:100%;

        $w1: $w;
        &:before {
          $w:10px;
          content:"";
          position:absolute;
          border:solid $w transparent;
          border-right:solid $w rgba(white, 0.1);
          left:-$w * 2;
          top:$w1 / 2 - $w;
        }

        .name {
          color:#999;
        }

        a.text.link {
          text-decoration: none;
          border-bottom:dashed 1px;
        }

        img.img {
          display: block !important;
        }
      }

      .click-to-continue {
        float: left;
        color: #999;
        clear: both;
        font-size: 16px;
        cursor: default;
        @include animation(click_to_continue 1s infinite);
        position: relative;
        height:32px;line-height:32px;

        $w:6px;
        &:before, &:after {
          content: "";
          border:solid $w transparent;
          border-left:solid $w #999;
          width:0;height:0;position:absolute;
          right:-$w * 2 - 10px;
          top: (32px - $w * 2) / 2;
          @include animation(click_to_continue_i 1s infinite);
        } 
        &:after {
          right: -$w * 3 - 10px - 2px;
        }
      }
    }

    &.no-npc {
      .area {}
      .area .pop {color:#aaa;}
      .area .pop:before {display: none;}
    }
  }

  .questionpop {
    @include clearfix;
    position: relative;
    padding: $grid-gap / 2 0;
    padding-bottom: 0;

    $w: 64px;
    .box {
      // margin-left: $w + $grid-gap / 2 + 10px;
      // margin-right: $w + $grid-gap / 2 + 10px;
      padding: 20px;
      border-radius: 4px;
      line-height:28px;min-height:28px;

      box-shadow:0 0 3px 1px $c, 0 0 3px 1px $c inset;
      border:solid 1px white;
      background:rgba($c, 0.05);
      position: relative;

      @include animation(qpop 1s infinite);

      .label {
        font-size: 16px;
        color: mix($c, #999, 50%);
        margin-bottom: 5px;
        opacity: 0.6;
      }
      .text {
        font-size: 16px;
        color: $c;
        // color:#0ff;
        margin-bottom: 15px;
      }
      .items {
        @include clearfix;
        margin:0 -5px -10px;
        .item {
          @include col(1/2, $gap:10px);
          margin-bottom:10px;
          a {
            display:block;
            font-size: 16px;
            height:48px;line-height:48px;
            background-color: rgba($c, 0.1);
            color:lighten($c, 15%);
            text-align:center;
            text-decoration:none;
            border-radius:4px;
            font-weight: bold;
            @include transition(all ease-in-out .2s);

            &:hover {
              background-color: rgba($c, 0.2);
              @include transform(scale(1.1) rotate(-0deg));
            }
          }
        }
      }
    }
  }
}